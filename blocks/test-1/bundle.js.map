{"version":3,"sources":["gutenberg.js"],"names":["_regeneratorRuntime","e","t","r","Object","prototype","n","hasOwnProperty","o","defineProperty","value","i","Symbol","a","iterator","c","asyncIterator","u","toStringTag","define","enumerable","configurable","writable","wrap","Generator","create","Context","h","f","Error","s","done","method","arg","delegate","maybeInvokeDelegate","TypeError","y","tryCatch","type","resultName","next","nextLoc","sent","_sent","dispatchException","abrupt","p","l","call","GeneratorFunction","GeneratorFunctionPrototype","d","this","getPrototypeOf","v","values","g","defineIteratorMethods","forEach","_invoke","AsyncIterator","callInvokeWithMethodAndArg","invoke","_typeof","resolve","__await","then","pushTryEntry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","isNaN","length","displayName","isGeneratorFunction","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","keys","reverse","pop","prev","charAt","slice","stop","rval","handle","complete","finish","catch","delegateYield","_toConsumableArray","_arrayWithoutHoles","_iterableToArray","_unsupportedIterableToArray","_nonIterableSpread","_arrayLikeToArray","toString","Array","from","test","isArray","asyncGeneratorStep","_asyncToGenerator","arguments","apply","_next","_throw","registerBlockType","wp","blocks","_wp$blockEditor","blockEditor","useBlockProps","RichText","MediaUpload","MediaUploadCheck","InspectorControls","InnerBlocks","_wp$components","components","PanelBody","Button","SelectControl","TextControl","_wp$element","element","useState","useEffect","apiFetch","fetchOptions","posts","map","post","title","link","categoryOptions","category","_context","t0","error","categories","postOptions","default","_callee$","edit","_ref2","attributes","setAttributes","React","createElement","Fragment","text_0","onChange","_ref3","Content","concat","text_1","text_2","imgSrc_0","imgAlt_0","_ref4","onSelect","media","url","allowedTypes","render","_ref5","open","onClick","isPrimary","class","src","alt","_callee","allowedBlocks","template","parent","save","_ref6","_ref7","_ref8","_ref9","_ref10","_ref11","url_0","_ref12","label","_ref13"],"mappings":"gRACAA,oBAAA,WAAA,OAAAC,CAAA,EAAA,IAAAC,EAAAD,EAAA,GAAAE,EAAAC,OAAAC,UAAAC,EAAAH,EAAAI,eAAAC,EAAAJ,OAAAK,gBAAA,SAAAP,EAAAD,EAAAE,GAAAD,EAAAD,GAAAE,EAAAO,KAAA,EAAAC,EAAA,YAAA,OAAAC,OAAAA,OAAA,GAAAC,EAAAF,EAAAG,UAAA,aAAAC,EAAAJ,EAAAK,eAAA,kBAAAC,EAAAN,EAAAO,aAAA,gBAAA,SAAAC,EAAAjB,EAAAD,EAAAE,GAAA,OAAAC,OAAAK,eAAAP,EAAAD,EAAA,CAAAS,MAAAP,EAAAiB,WAAA,CAAA,EAAAC,aAAA,CAAA,EAAAC,SAAA,CAAA,CAAA,CAAA,EAAApB,EAAAD,EAAA,CAAA,IAAAkB,EAAA,GAAA,EAAA,CAAA,CAAA,MAAAjB,GAAAiB,EAAA,SAAAjB,EAAAD,EAAAE,GAAA,OAAAD,EAAAD,GAAAE,CAAA,CAAA,CAAA,SAAAoB,EAAArB,EAAAD,EAAAE,EAAAG,GAAA,IAAAL,EAAAE,EAAAG,EAAAE,EAAAG,EAAAV,GAAAA,EAAAI,qBAAAmB,EAAAvB,EAAAuB,EAAAX,EAAAT,OAAAqB,OAAAd,EAAAN,SAAA,EAAAU,EAAA,IAAAW,EAAApB,GAAA,EAAA,EAAA,OAAAE,EAAAK,EAAA,UAAA,CAAAH,OAAAT,EAAAC,EAAAC,EAAAA,EAAAG,EAAAS,EAAAP,EAAAmB,EAAA,SAAAhB,EAAAE,GAAA,GAAAL,IAAAoB,EAAA,MAAAC,MAAA,8BAAA,EAAA,GAAArB,IAAAsB,EAAA,CAAA,GAAA,UAAAnB,EAAA,MAAAE,EAAA,MAAA,CAAAH,MAAAR,EAAA6B,KAAA,CAAA,CAAA,CAAA,CAAA,IAAAzB,EAAA0B,OAAArB,EAAAL,EAAA2B,IAAApB,IAAA,CAAA,IAAAE,EAAAT,EAAA4B,SAAA,GAAAnB,EAAA,CAAAE,EAAA,SAAAkB,EAAAlC,EAAAE,GAAA,IAAAG,EAAAH,EAAA6B,OAAAxB,EAAAP,EAAAa,SAAAR,GAAA,GAAAE,IAAAN,EAAA,OAAAC,EAAA+B,SAAA,KAAA,UAAA5B,GAAAL,EAAAa,SAAA,SAAAX,EAAA6B,OAAA,SAAA7B,EAAA8B,IAAA/B,EAAAiC,EAAAlC,EAAAE,CAAA,EAAA,UAAAA,EAAA6B,SAAA,WAAA1B,IAAAH,EAAA6B,OAAA,QAAA7B,EAAA8B,IAAA,IAAAG,UAAA,oCAAA9B,EAAA,UAAA,GAAA+B,EAAA1B,EAAA2B,EAAA9B,EAAAP,EAAAa,SAAAX,EAAA8B,GAAA,EAAA,GAAA,UAAAtB,EAAA4B,KAAA,OAAApC,EAAA6B,OAAA,QAAA7B,EAAA8B,IAAAtB,EAAAsB,IAAA9B,EAAA+B,SAAA,KAAAG,EAAAxB,EAAAF,EAAAsB,IAAA,OAAApB,EAAAA,EAAAkB,MAAA5B,EAAAF,EAAAuC,YAAA3B,EAAAH,MAAAP,EAAAsC,KAAAxC,EAAAyC,QAAA,WAAAvC,EAAA6B,SAAA7B,EAAA6B,OAAA,OAAA7B,EAAA8B,IAAA/B,GAAAC,EAAA+B,SAAA,KAAAG,GAAAxB,GAAAV,EAAA6B,OAAA,QAAA7B,EAAA8B,IAAA,IAAAG,UAAA,kCAAA,EAAAjC,EAAA+B,SAAA,KAAAG,EAAA,EAAAtB,EAAAT,CAAA,EAAA,GAAAW,EAAA,CAAA,GAAAA,IAAAoB,EAAA,SAAA,OAAApB,CAAA,CAAA,CAAA,GAAA,SAAAX,EAAA0B,OAAA1B,EAAAqC,KAAArC,EAAAsC,MAAAtC,EAAA2B,SAAA,GAAA,UAAA3B,EAAA0B,OAAA,CAAA,GAAAxB,IAAAmB,EAAA,MAAAnB,EAAAsB,EAAAxB,EAAA2B,IAAA3B,EAAAuC,kBAAAvC,EAAA2B,GAAA,CAAA,KAAA,WAAA3B,EAAA0B,QAAA1B,EAAAwC,OAAA,SAAAxC,EAAA2B,GAAA,EAAAzB,EAAAoB,EAAAmB,EAAAT,EAAArC,EAAAE,EAAAG,CAAA,EAAA,GAAA,WAAAyC,EAAAR,KAAA,CAAA,GAAA/B,EAAAF,EAAAyB,KAAAD,EAAAkB,EAAAD,EAAAd,MAAAI,EAAA,SAAA,MAAA,CAAA3B,MAAAqC,EAAAd,IAAAF,KAAAzB,EAAAyB,IAAA,CAAA,CAAA,UAAAgB,EAAAR,OAAA/B,EAAAsB,EAAAxB,EAAA0B,OAAA,QAAA1B,EAAA2B,IAAAc,EAAAd,IAAA,CAAA,EAAA,CAAA,EAAApB,CAAA,CAAA,SAAAyB,EAAApC,EAAAD,EAAAE,GAAA,IAAA,MAAA,CAAAoC,KAAA,SAAAN,IAAA/B,EAAA+C,KAAAhD,EAAAE,CAAA,CAAA,CAAA,CAAA,MAAAD,GAAA,MAAA,CAAAqC,KAAA,QAAAN,IAAA/B,CAAA,CAAA,CAAA,CAAAD,EAAAsB,KAAAA,EAAA,IAAAI,EAAA,iBAAAqB,EAAA,iBAAApB,EAAA,YAAAE,EAAA,YAAAO,EAAA,GAAA,SAAAb,KAAA,SAAA0B,KAAA,SAAAC,KAAA,IAAAJ,EAAA,GAAAK,GAAAjC,EAAA4B,EAAAlC,EAAA,WAAA,OAAAwC,IAAA,CAAA,EAAAjD,OAAAkD,gBAAAC,EAAAH,GAAAA,EAAAA,EAAAI,EAAA,EAAA,CAAA,CAAA,EAAAC,GAAAF,GAAAA,IAAApD,GAAAG,EAAA2C,KAAAM,EAAA1C,CAAA,IAAAkC,EAAAQ,GAAAJ,EAAA9C,UAAAmB,EAAAnB,UAAAD,OAAAqB,OAAAsB,CAAA,GAAA,SAAAW,EAAAxD,GAAA,CAAA,OAAA,QAAA,UAAAyD,QAAA,SAAA1D,GAAAkB,EAAAjB,EAAAD,EAAA,SAAAC,GAAA,OAAAmD,KAAAO,QAAA3D,EAAAC,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAA2D,EAAA3D,EAAAD,GAAA,IAAAE,EAAAK,EAAA6C,KAAA,UAAA,CAAA3C,MAAA,SAAAR,EAAAI,GAAA,SAAAwD,IAAA,OAAA,IAAA7D,EAAA,SAAAA,EAAAE,GAAA4D,CAAA,SAAAA,EAAA5D,EAAAK,EAAAG,EAAAE,GAAA,IAAAI,EAAAF,EAAAuB,EAAApC,EAAAC,GAAAD,EAAAM,CAAA,EAAA,GAAA,UAAAO,EAAAwB,KAAA,OAAAZ,GAAAV,EAAAF,EAAAkB,KAAAvB,QAAA,UAAAsD,QAAArC,CAAA,GAAArB,EAAA2C,KAAAtB,EAAA,SAAA,EAAA1B,EAAAgE,QAAAtC,EAAAuC,OAAA,EAAAC,KAAA,SAAAjE,GAAA6D,EAAA,OAAA7D,EAAAS,EAAAE,CAAA,CAAA,EAAA,SAAAX,GAAA6D,EAAA,QAAA7D,EAAAS,EAAAE,CAAA,CAAA,CAAA,EAAAZ,EAAAgE,QAAAtC,CAAA,EAAAwC,KAAA,SAAAjE,GAAAe,EAAAP,MAAAR,EAAAS,EAAAM,CAAA,CAAA,EAAA,SAAAf,GAAA,OAAA6D,EAAA,QAAA7D,EAAAS,EAAAE,CAAA,CAAA,CAAA,EAAAA,EAAAE,EAAAkB,GAAA,CAAA,EAAA/B,EAAAI,EAAAL,EAAAE,CAAA,CAAA,CAAA,CAAA,CAAA,OAAAA,EAAAA,EAAAA,EAAAgE,KAAAL,EAAAA,CAAA,EAAAA,EAAA,CAAA,CAAA,CAAA,CAAA,CAAA,SAAAM,EAAAlE,GAAA,IAAAD,EAAA,CAAAoE,OAAAnE,EAAA,EAAA,EAAA,KAAAA,IAAAD,EAAAqE,SAAApE,EAAA,IAAA,KAAAA,IAAAD,EAAAsE,WAAArE,EAAA,GAAAD,EAAAuE,SAAAtE,EAAA,IAAAmD,KAAAoB,WAAAC,KAAAzE,CAAA,CAAA,CAAA,SAAA0E,EAAAzE,GAAA,IAAAD,EAAAC,EAAA0E,YAAA,GAAA3E,EAAAsC,KAAA,SAAA,OAAAtC,EAAAgC,IAAA/B,EAAA0E,WAAA3E,CAAA,CAAA,SAAAyB,EAAAxB,GAAAmD,KAAAoB,WAAA,CAAA,CAAAJ,OAAA,MAAA,GAAAnE,EAAAyD,QAAAS,EAAAf,IAAA,EAAAA,KAAAwB,MAAA,CAAA,CAAA,CAAA,CAAA,SAAArB,EAAAvD,GAAA,GAAAA,GAAA,KAAAA,EAAA,CAAA,IAAAO,EAAAL,EAAAF,EAAAY,GAAA,GAAAV,EAAA,OAAAA,EAAA8C,KAAAhD,CAAA,EAAA,GAAA,YAAA,OAAAA,EAAAwC,KAAA,OAAAxC,EAAA,GAAA,CAAA6E,MAAA7E,EAAA8E,MAAA,EAAA,OAAAvE,EAAA,CAAA,GAAAG,EAAA,SAAA8B,IAAA,KAAA,EAAAjC,EAAAP,EAAA8E,QAAA,GAAAzE,EAAA2C,KAAAhD,EAAAO,CAAA,EAAA,OAAAiC,EAAA/B,MAAAT,EAAAO,GAAAiC,EAAAV,KAAA,CAAA,EAAAU,EAAA,OAAAA,EAAA/B,MAAAR,EAAAuC,EAAAV,KAAA,CAAA,EAAAU,CAAA,GAAAA,KAAA9B,CAAA,CAAA,MAAA,IAAAyB,UAAA4B,QAAA/D,CAAA,EAAA,kBAAA,CAAA,CAAA,OAAAO,EAAAiD,EAAA,cAAA,CAAA/C,MAAAwC,EAAA7C,UAAA8C,EAAA9B,aAAA,CAAA,CAAA,CAAA,EAAAb,EAAA2C,EAAA,cAAA,CAAAzC,MAAAwC,EAAA7B,aAAA,CAAA,CAAA,CAAA,EAAA6B,EAAA8B,YAAA7D,EAAAgC,EAAAlC,EAAA,mBAAA,EAAAhB,EAAAgF,oBAAA,SAAA/E,GAAAD,EAAA,YAAA,OAAAC,GAAAA,EAAAgF,YAAA,MAAA,CAAA,CAAAjF,IAAAA,IAAAiD,GAAA,uBAAAjD,EAAA+E,aAAA/E,EAAAkF,MAAA,EAAAlF,EAAAmF,KAAA,SAAAlF,GAAA,OAAAE,OAAAiF,eAAAjF,OAAAiF,eAAAnF,EAAAiD,CAAA,GAAAjD,EAAAoF,UAAAnC,EAAAhC,EAAAjB,EAAAe,EAAA,mBAAA,GAAAf,EAAAG,UAAAD,OAAAqB,OAAAgC,CAAA,EAAAvD,CAAA,EAAAD,EAAAsF,MAAA,SAAArF,GAAA,MAAA,CAAAgE,QAAAhE,CAAA,CAAA,EAAAwD,EAAAG,EAAAxD,SAAA,EAAAc,EAAA0C,EAAAxD,UAAAU,EAAA,WAAA,OAAAsC,IAAA,CAAA,EAAApD,EAAA4D,cAAAA,EAAA5D,EAAAuF,MAAA,SAAAtF,EAAAC,EAAAG,EAAAE,EAAAG,GAAA,KAAA,IAAAA,IAAAA,EAAA8E,SAAA,IAAA5E,EAAA,IAAAgD,EAAAtC,EAAArB,EAAAC,EAAAG,EAAAE,CAAA,EAAAG,CAAA,EAAA,OAAAV,EAAAgF,oBAAA9E,CAAA,EAAAU,EAAAA,EAAA4B,KAAA,EAAA0B,KAAA,SAAAjE,GAAA,OAAAA,EAAA6B,KAAA7B,EAAAQ,MAAAG,EAAA4B,KAAA,CAAA,CAAA,CAAA,EAAAiB,EAAAD,CAAA,EAAAtC,EAAAsC,EAAAxC,EAAA,WAAA,EAAAE,EAAAsC,EAAA5C,EAAA,WAAA,OAAAwC,IAAA,CAAA,EAAAlC,EAAAsC,EAAA,WAAA,WAAA,MAAA,oBAAA,CAAA,EAAAxD,EAAAyF,KAAA,SAAAxF,GAAA,IAAAI,EAAAL,EAAAG,OAAAF,CAAA,EAAAC,EAAA,GAAA,IAAAG,KAAAL,EAAAE,EAAAuE,KAAApE,CAAA,EAAA,OAAAH,EAAAwF,QAAA,EAAA,SAAAlD,IAAA,KAAAtC,EAAA4E,QAAA,CAAA,IAAA7E,EAAAC,EAAAyF,IAAA,EAAA,GAAA1F,KAAAD,EAAA,OAAAwC,EAAA/B,MAAAR,EAAAuC,EAAAV,KAAA,CAAA,EAAAU,CAAA,CAAA,OAAAA,EAAAV,KAAA,CAAA,EAAAU,CAAA,CAAA,EAAAxC,EAAAuD,OAAAA,EAAA9B,EAAArB,UAAA,CAAA6E,YAAAxD,EAAAmD,MAAA,SAAA5E,GAAA,GAAAoD,KAAAwC,KAAA,EAAAxC,KAAAZ,KAAA,EAAAY,KAAAV,KAAAU,KAAAT,MAAA1C,EAAAmD,KAAAtB,KAAA,CAAA,EAAAsB,KAAAnB,SAAA,KAAAmB,KAAArB,OAAA,OAAAqB,KAAApB,IAAA/B,EAAAmD,KAAAoB,WAAAd,QAAAgB,CAAA,EAAA,CAAA1E,EAAA,IAAA,IAAAE,KAAAkD,KAAA,MAAAlD,EAAA2F,OAAA,CAAA,GAAAxF,EAAA2C,KAAAI,KAAAlD,CAAA,GAAA,CAAA2E,MAAA,CAAA3E,EAAA4F,MAAA,CAAA,CAAA,IAAA1C,KAAAlD,GAAAD,EAAA,EAAA8F,KAAA,WAAA3C,KAAAtB,KAAA,CAAA,EAAA,IAAA7B,EAAAmD,KAAAoB,WAAA,GAAAG,WAAA,GAAA,UAAA1E,EAAAqC,KAAA,MAAArC,EAAA+B,IAAA,OAAAoB,KAAA4C,IAAA,EAAApD,kBAAA,SAAA5C,GAAA,GAAAoD,KAAAtB,KAAA,MAAA9B,EAAA,IAAAE,EAAAkD,KAAA,SAAA6C,EAAA5F,EAAAE,GAAA,OAAAK,EAAA0B,KAAA,QAAA1B,EAAAoB,IAAAhC,EAAAE,EAAAsC,KAAAnC,EAAAE,IAAAL,EAAA6B,OAAA,OAAA7B,EAAA8B,IAAA/B,GAAA,CAAA,CAAAM,CAAA,CAAA,IAAA,IAAAA,EAAA6C,KAAAoB,WAAAM,OAAA,EAAA,GAAAvE,EAAA,EAAAA,EAAA,CAAA,IAAAG,EAAA0C,KAAAoB,WAAAjE,GAAAK,EAAAF,EAAAiE,WAAA,GAAA,SAAAjE,EAAA0D,OAAA,OAAA6B,EAAA,KAAA,EAAA,GAAAvF,EAAA0D,QAAAhB,KAAAwC,KAAA,CAAA,IAAA9E,EAAAT,EAAA2C,KAAAtC,EAAA,UAAA,EAAAM,EAAAX,EAAA2C,KAAAtC,EAAA,YAAA,EAAA,GAAAI,GAAAE,EAAA,CAAA,GAAAoC,KAAAwC,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,SAAA,CAAA,CAAA,EAAA,GAAAjB,KAAAwC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,UAAA,CAAA,MAAA,GAAAxD,GAAA,GAAAsC,KAAAwC,KAAAlF,EAAA2D,SAAA,OAAA4B,EAAAvF,EAAA2D,SAAA,CAAA,CAAA,CAAA,KAAA,CAAA,GAAA,CAAArD,EAAA,MAAAY,MAAA,wCAAA,EAAA,GAAAwB,KAAAwC,KAAAlF,EAAA4D,WAAA,OAAA2B,EAAAvF,EAAA4D,UAAA,CAAA,CAAA,CAAA,CAAA,EAAAzB,OAAA,SAAA5C,EAAAD,GAAA,IAAA,IAAAE,EAAAkD,KAAAoB,WAAAM,OAAA,EAAA,GAAA5E,EAAA,EAAAA,EAAA,CAAA,IAAAK,EAAA6C,KAAAoB,WAAAtE,GAAA,GAAAK,EAAA6D,QAAAhB,KAAAwC,MAAAvF,EAAA2C,KAAAzC,EAAA,YAAA,GAAA6C,KAAAwC,KAAArF,EAAA+D,WAAA,CAAA,IAAA5D,EAAAH,EAAA,KAAA,CAAA,CAAA,IAAAK,GAAAF,EAAAA,IAAA,UAAAT,GAAA,aAAAA,IAAAS,EAAA0D,QAAApE,GAAAA,GAAAU,EAAA4D,WAAA,KAAA5D,GAAAA,EAAAiE,WAAA,GAAA,OAAA/D,EAAA0B,KAAArC,EAAAW,EAAAoB,IAAAhC,EAAAU,GAAA0C,KAAArB,OAAA,OAAAqB,KAAAZ,KAAA9B,EAAA4D,WAAAlC,GAAAgB,KAAA8C,SAAAtF,CAAA,CAAA,EAAAsF,SAAA,SAAAjG,EAAAD,GAAA,GAAA,UAAAC,EAAAqC,KAAA,MAAArC,EAAA+B,IAAA,MAAA,UAAA/B,EAAAqC,MAAA,aAAArC,EAAAqC,KAAAc,KAAAZ,KAAAvC,EAAA+B,IAAA,WAAA/B,EAAAqC,MAAAc,KAAA4C,KAAA5C,KAAApB,IAAA/B,EAAA+B,IAAAoB,KAAArB,OAAA,SAAAqB,KAAAZ,KAAA,OAAA,WAAAvC,EAAAqC,MAAAtC,IAAAoD,KAAAZ,KAAAxC,GAAAoC,CAAA,EAAA+D,OAAA,SAAAlG,GAAA,IAAA,IAAAD,EAAAoD,KAAAoB,WAAAM,OAAA,EAAA,GAAA9E,EAAA,EAAAA,EAAA,CAAA,IAAAE,EAAAkD,KAAAoB,WAAAxE,GAAA,GAAAE,EAAAoE,aAAArE,EAAA,OAAAmD,KAAA8C,SAAAhG,EAAAyE,WAAAzE,EAAAqE,QAAA,EAAAG,EAAAxE,CAAA,EAAAkC,CAAA,CAAA,EAAAgE,MAAA,SAAAnG,GAAA,IAAA,IAAAD,EAAAoD,KAAAoB,WAAAM,OAAA,EAAA,GAAA9E,EAAA,EAAAA,EAAA,CAAA,IAAAK,EAAAE,EAAAL,EAAAkD,KAAAoB,WAAAxE,GAAA,GAAAE,EAAAkE,SAAAnE,EAAA,MAAA,WAAAI,EAAAH,EAAAyE,YAAArC,OAAA/B,EAAAF,EAAA2B,IAAA0C,EAAAxE,CAAA,GAAAK,CAAA,CAAA,MAAAqB,MAAA,uBAAA,CAAA,EAAAyE,cAAA,SAAArG,EAAAE,EAAAG,GAAA,OAAA+C,KAAAnB,SAAA,CAAApB,SAAA0C,EAAAvD,CAAA,EAAAuC,WAAArC,EAAAuC,QAAApC,CAAA,EAAA,SAAA+C,KAAArB,SAAAqB,KAAApB,IAAA/B,GAAAmC,CAAA,CAAA,EAAApC,CAAA,CAAA,SAAAsG,mBAAApG,GAAA,OAAAqG,mBAAArG,CAAA,GAAAsG,iBAAAtG,CAAA,GAAAuG,4BAAAvG,CAAA,GAAAwG,mBAAA,CAAA,CAAA,SAAAA,qBAAA,MAAA,IAAAvE,UAAA,sIAAA,CAAA,CAAA,SAAAsE,4BAAAvG,EAAAU,GAAA,IAAAX,EAAA,GAAAC,EAAA,MAAA,UAAA,OAAAA,EAAAyG,kBAAAzG,EAAAU,CAAA,EAAA,SAAAX,EAAA,YAAAA,EAAA,GAAA2G,SAAA5D,KAAA9C,CAAA,EAAA4F,MAAA,EAAA,CAAA,CAAA,IAAA5F,EAAA+E,YAAA/E,EAAA+E,YAAAC,KAAAjF,IAAA,QAAAA,EAAA4G,MAAAC,KAAA5G,CAAA,EAAA,cAAAD,GAAA,2CAAA8G,KAAA9G,CAAA,EAAA0G,kBAAAzG,EAAAU,CAAA,EAAA,KAAA,CAAA,CAAA,SAAA4F,iBAAAtG,GAAA,GAAA,aAAA,OAAAS,QAAA,MAAAT,EAAAS,OAAAE,WAAA,MAAAX,EAAA,cAAA,OAAA2G,MAAAC,KAAA5G,CAAA,CAAA,CAAA,SAAAqG,mBAAArG,GAAA,GAAA2G,MAAAG,QAAA9G,CAAA,EAAA,OAAAyG,kBAAAzG,CAAA,CAAA,CAAA,SAAAyG,kBAAAzG,EAAAU,IAAA,MAAAA,GAAAA,EAAAV,EAAA4E,UAAAlE,EAAAV,EAAA4E,QAAA,IAAA,IAAA9E,EAAA,EAAAK,EAAAwG,MAAAjG,CAAA,EAAAZ,EAAAY,EAAAZ,CAAA,GAAAK,EAAAL,GAAAE,EAAAF,GAAA,OAAAK,CAAA,CAAA,SAAA4G,mBAAA5G,EAAAJ,EAAAD,EAAAE,EAAAK,EAAAK,EAAAE,GAAA,IAAA,IAAAJ,EAAAL,EAAAO,GAAAE,CAAA,EAAAE,EAAAN,EAAAD,KAAA,CAAA,MAAAJ,GAAA,OAAA,KAAAL,EAAAK,CAAA,CAAA,CAAAK,EAAAoB,KAAA7B,EAAAe,CAAA,EAAAwE,QAAAxB,QAAAhD,CAAA,EAAAkD,KAAAhE,EAAAK,CAAA,CAAA,CAAA,SAAA2G,kBAAA7G,GAAA,OAAA,WAAA,IAAAJ,EAAAmD,KAAApD,EAAAmH,UAAA,OAAA,IAAA3B,QAAA,SAAAtF,EAAAK,GAAA,IAAAK,EAAAP,EAAA+G,MAAAnH,EAAAD,CAAA,EAAA,SAAAqH,EAAAhH,GAAA4G,mBAAArG,EAAAV,EAAAK,EAAA8G,EAAAC,EAAA,OAAAjH,CAAA,CAAA,CAAA,SAAAiH,EAAAjH,GAAA4G,mBAAArG,EAAAV,EAAAK,EAAA8G,EAAAC,EAAA,QAAAjH,CAAA,CAAA,CAAAgH,EAAA,KAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CADA,IAAQE,kBAAsBC,GAAGC,OAAzBF,kBACRG,gBAAmGF,GAAGG,YAA9FC,cAAaF,gBAAbE,cAAeC,SAAQH,gBAARG,SAAUC,YAAWJ,gBAAXI,YAAaC,iBAAgBL,gBAAhBK,iBAAkBC,kBAAiBN,gBAAjBM,kBAAmBC,YAAWP,gBAAXO,YACnFC,eAA0DV,GAAGW,WAArDC,UAASF,eAATE,UAAWC,OAAMH,eAANG,OAAQC,cAAaJ,eAAbI,cAAeC,YAAWL,eAAXK,YAC1CC,YAAgChB,GAAGiB,QAA3BC,SAAQF,YAARE,SAAUC,UAASH,YAATG,UAFlBC,SAAAtC,GAAAA,SAAAuC,cAAApC,KAAAA,IAAAA,EAAAA,kBAAAA,oBAAAA,EAAAA,KAAAA,SAAAA,IAAAA,IAAAA,EAAAA,EAAAA,EAAAA,OAAAA,oBAAAA,EAAAA,KAAAA,SAAAA,GAAAA,OAAAA,OAAAA,EAAAA,KAAAA,EAAAA,MAAAA,KAAAA,EAAAA,OAAAA,EAAAA,KAAAA,EAAAA,EAAAA,KAAAA,EAAAvG,SAAA2G,CAAAA,KAAAG,2BAAAL,CAAAA,EAAAA,KAAAA,EAAAJ,OAAAA,EAAAA,EAAAA,KAAAA,EAAAA,KAAAA,EAAAqC,SAAA,CAAAhI,KAAA,gCAAA,CAAA,EAAA,KAAA,EAAmFqH,OAAnFtB,EAAAA,EAAAA,KAAAO,EAAA4B,EAAAC,IAAA,SAAAC,GAAA,MAAA,CADQzB,MAAAA,SAAAA,OAAyBE,EAAMwB,MAA/B1B,QAAAA,EACRG,MAAAsB,EAAqGE,IAA7FtB,CAAAA,CAAAA,EAAoCuB,EAAXrB,EAAWiB,IAAA,SAAAK,GAAA,MAAA,CAAErB,MAAAA,aAAAA,OAAgBL,EAAhBK,IAAAA,EAAkBC,MAAiBoB,EAAA1B,IAAEO,CAAAA,CAAAA,EAAAA,EAAAA,OAAAA,SAAAA,GAAAA,OAAAA,mBAClEC,CAATE,EAAAA,mBAAAA,CAAS,CAAA,CAAA,EAAA,KAAA,GAAuB,OAAvBiB,EAAAzD,KAAA,GAAAyD,EAAAC,GAAAD,EAAA,MAAA,CAAA,EAAUf,QAAaiB,MAAArB,uBAAbI,EAAAA,EAAa,EAAAe,EAAAxG,OAAA,SAAa,EAAAqF,EAAAA,KAAAA,GAAAA,IAAAA,MAAAA,OAAAA,EAAAA,KAAAA,CAAAA,CAAAA,EAAAA,EAAAA,KAAAA,CAAAA,CAAAA,EAAAA,IAAAA,CAAAA,CAwBpD,CAAA,EAAA,OAAA,WAzBDzB,OAAAA,EAAAA,MAAAA,KAAAA,SAAAA,CAAAA,CAAAA,GAAAA,EAE2Bc,kBAAToB,0BAAS,CACVnB,MAAGoB,aAEFQ,SAAA,eAAAlC,OAAAA,CAAAA,yBAAGsC,WAAAC,CAAA1J,OAAAA,CAAAuC,KAAAhB,SAAAoI,QAAAC,KAAAN,CAAA,EAAAO,KAAA,SAAAC,GAAA,IAAAC,EAAAD,EAAAC,WAAAC,EAAAF,EAAAE,cAAAnE,OAAAoE,MAAAC,cAAAD,MAAAE,SAAA,KAEwBF,MAAAC,cAAA,KAAA,KAAAD,MAAAC,cAAApC,SAAA,CAAApH,MAAAqJ,EAAAK,OAAAC,SAAA,SAAA3J,GAAA,OAAAsJ,EAAA,CAAAI,OAAA1J,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAA8B,CAAxD,EAAA4I,KAAA7G,SAAAA,GAAAsH,EAAAO,EAAAP,WACclB,OAAiBoB,MAAAC,cAAAD,MAAAE,SAAA,KAAmCF,MAAAC,cAAA,KAAA,KAAAD,MAAAC,cAAApC,SAAAyC,QAAA,CAAA7J,MAAAqJ,EAAAK,MAAA,CAAA,CAAA,CAAA,CAEvEV,CAA6B,CAAA,EAwC/BlC,kBAtCY2B,wBAAAA,CACfD,MAAA,WAAEG,SAAA,eAEGD,OAAAA,CAAe,uBAA2BW,WAAM,CAC7CK,OAAA,CAAA7H,KAAAiI,SAAenB,QAAe,QAAA,EAwC/CoB,OAAQ,CAAElI,KAvCE7B,SAAO2I,QAASF,yCAAAA,EAwC5BuB,OAAQ,CAAEnI,KAvCD,SAAAoH,QAAA,iCAAA,EAwCTgB,SAxCS,CAAEpI,KAAA,SAAAoH,QAAA,eAAA,EAyCXiB,SAzCW,CAAArI,KAAA+G,SAAAxG,QAAA,iBAAAyD,CAEuC,EAAA+C,KAAAzD,SAAAA,GAAA,IAAAkE,EAAAc,EAAAd,WAAAC,EAAAa,EAAAb,cAAAT,OAE5BU,MAAAC,cAAAD,MAAAE,SAAA,KAA+BrH,MAAAA,cAAAA,kBACpC,KAAAmH,MAAAC,cAAA7B,UAAA,CAAAa,MAAA,sBAAA,EAAAe,MAAAC,cAAAlC,iBAAA,KAAAiC,MAAAC,cAAAnC,YAAA,CAAA+C,SAAA,SAAAC,GAAA,OAAAf,EAAA,CAAAW,SAAAI,EAAAC,GAAA,CAAA,CAAA,EAAAC,aAAA,CAAA,SAAAC,OAAA,SAAAC,GAAAC,EAAAD,EAAAC,KAAA,OAAAnB,MAAAC,cAAA5B,OAAA,CAAA+C,QAAAD,EAAAE,UAAA,CAAA,CAAA,EAAA,cAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAArB,MAAAC,cAAA,MAAA,CAAAqB,MAAA,MAAA,EAAAtB,MAAAC,cAAA,KAAA,KAAAD,MAAAC,cAAApC,SAAA,CAAApH,MAAAqJ,EAAAK,OAAAC,SAAA,SAAA3J,GAAA,OAAAsJ,EAAA,CAAAI,OAAA1J,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EA4CTuJ,MAAAC,cAAA,MAAA,CA5CSsB,IAAAlC,EAAAtD,SAAAyF,IAAA1B,EAAAa,QAAA,CAAA,EAAAX,MAAAC,cAAA,MAAA,CAAAqB,MAAA,cAAA,EAAAG,MAAAA,cAAAA,SAAA,CAAAhL,MAAAqJ,EAAAU,OAAAJ,SAAA,SAAA3J,GAAA,OAAAsJ,EAAA,CAAAS,OAAA/J,CAAA,CAAA,CAAA,CAAA,CAAA,CAEhB,EAAAuJ,MAAAC,cAAA,KAAA,KAAAD,MAAAC,cAAAhC,YApBKY,CAAY6C,cAAAtE,CAAAA,2BAAAuE,SAAA,CAoBjB,CAAA,0BAAA,IACWpE,CAAAA,CACW,CACP6B,EACAwC,MAAAA,cAAAA,MAAAA,CAAMN,MAAG,IAAA,EACTxB,MAAAA,cAAAA,OAAAA,KAAYE,MAAAC,cAAApC,SAAA,CAAApH,MAAAqJ,EAAAW,OAAAL,SAAA,SAAA3J,GAAA,OAAAsJ,EAAA,CAAAU,OAAAhK,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CACR0J,CAAwB,CAAiB,EAC5C0B,KAAA,SAAAC,GAAAhC,EAAAgC,EAAAhC,WACDF,OAAmBC,MAAAA,cAAAA,MAAAA,SAAAA,KAAEE,MAAAA,cAAAA,MAAAA,CAAAA,MAAAA,MAAa,EAC9BC,MAAAC,cAAA,KAAA,KAAAD,MAAAC,cAAApC,SAAAyC,QACI,CAAAL,MAAAA,EAAAD,MAAAE,CAAAA,CAAA,EAEkBzJ,MAAAA,cAAAA,MAAAA,CAAOqJ,IAAAA,EAAWK,SAAOqB,IAAA1B,EAAAa,QAAA,CAAA,EAACP,MAAAA,cAAAA,MAAAA,CAAAA,MAAU,cAAFA,EAAQJ,MAAAC,cAAApC,SAAKkC,QAAc,CAAAtJ,MAAAqJ,EAAAU,MAAA,CAAA,CAAEL,EAAAA,MAAAA,cAAAA,KAAAA,KAAcH,MAAAC,cAAChC,YAACqC,QAAA,IAAA,CAAA,CAC9F,EAEVN,MAAAC,cAAA,MAAA,CAAAqB,MAAA,IAAA,EACKtB,MAAAC,cAAA,OAAA,KAAAD,MAAAC,cAAApC,SAAFwC,QAAsB,CAAA5J,MAAAqJ,EAAAW,MAAA,CAAA,CAAA,CAAjBX,CAEDE,CAEG,CAEX,CAAA,EAGJzC,kBAAkB,0BAAyB,CAChC0B,MAAU,aACPG,SAAc,eACfwC,OAAA,CAAA,yBACG9B,WAAA,CACAK,OAAA,CAAA7H,KAAA,SAAAoH,QAAA,KAAA,CAAQ,EAAUE,KAAS,SAAAmC,GAAA,IAAAjC,EAAAiC,EAAAjC,WAAAC,EAAAgC,EAAAhC,cAAU,OACzDC,MAAAC,cAAAD,MAAAE,SAAA,KAA2BF,MAAAC,cAAA,KAAA,KAAAD,MAAAC,cAAApC,SAAA,CAAApH,MAAAqJ,EAAAK,OAAAC,SAAA,SAAA3J,GAAA,OAAAsJ,EAAA,CAAAI,OAAA1J,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAA2C,CAC9D,EAAUoL,KAAS,SAAAG,GAAAlC,EAAAkC,EAAAlC,WAAmC,OAC5DE,MAAAC,cAAAD,MAAAE,SAAA,KAAgBF,MAAAC,cAAA,KAAA,KAAAD,MAAAC,cAAApC,SAAAyC,QAAA,CAAA7J,MAAAqJ,EAAAK,MAAA,CAAA,CAAA,CAAW,CAC3B,CAAQ,CAAA,EAAqC5C,kBAAA,wBAAA,CACtC0B,MAAA,WACKG,SAAFwB,eAAKd,OAAUc,CAAAA,uBAAEb,WAAAA,CACjBI,OACIH,CAAAC,KAAAA,SAAAD,QAAAE,QAAA,EAuExBM,OAtE0DvB,CAAAA,KAAM,SAAAS,QAAA,yCAAA,EAuEhEe,OAvEsF,CAAAnI,KAAA,SAAC2H,QAAAA,iCAAiB,EAwExGS,SAxEsHG,CAAAA,KAAU,SAAVA,QAAWC,eAAK,EAyEtIH,SAzEsI,CAAArI,KAAKyH,SAAaL,QAAC,iBAAA,CAAEgB,EAAsBd,KAAA,SAAAqC,GAAA,IAAAnC,EAAAmC,EAAAnC,WAAAC,EAAAkC,EAAAlC,cAAC,OAAgBC,MAAAC,cAAAD,MAAAE,SAAA,KAAUe,MAAAA,cAAMA,kBAAA,KAAAjB,MAAAC,cAAA7B,UAAA,CAAAa,MAAA,sBAAA,EAAAe,MAAAC,cAAAlC,iBAAA,KAAAiC,MAAAC,cAAAnC,YAAA,CAAA+C,SAAA,SAAAC,GAAA,OAAAf,EAAA,CAAAW,SAAAI,EAAAC,GAAA,CAAA,CAAA,EAAAC,aAAA,CAAA,SAAAC,OAAA,SAAAiB,GAAAf,EAAAe,EAAAf,KAAA,OAAAnB,MAAAC,cAAA5B,OAAA,CAAA+C,QAAAD,EAAAE,UAAA,CAAA,CAAA,EAAA,cAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAKF,MAAAA,cAAAA,MAAAA,CAAIG,MAAA,MAAA,EAAAtB,MAAAC,cAAA,KAAA,KAAAD,MAAAC,cAAApC,SAAA,CAAApH,MAAQuJ,EAAAC,OAAC5B,SAAM,SAAA5H,GAAA,OAAAsJ,EAAA,CAAAI,OAAA1J,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAiFlOuJ,MAAAC,cAAA,MAAA,CAjFmOmB,IAAOtB,EAAOY,SAAAc,IAAA1B,EAAAa,QAAA,CAAA,EAkFjPX,MAAAC,cAAA,MAAA,CAlFkPoB,MAAS,cAAA,EAACrB,MAAAC,cAAApC,SAAA,CAAApH,MAAqBqJ,EAAAU,OAAAJ,SAAA,SAAA3J,GAAA,OAAAsJ,EAAA,CAAAS,OAAA/J,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAAuJ,MAAAC,cAAA,KAAA,KAAuDD,MAAAC,cAAChC,YAAA,CAsF7UyD,cArFmC,CAAA,2BAAMC,SAAA,CACvBlL,CAAAA,0BAAyB,IAAC2J,CAAAA,CAAgB,CAyFvD,EACLJ,MAAAC,cAAA,MAAA,CA1FgGqB,MAAC,IAAA,EAAAtB,MAAAC,cAAA,OAAA,KAAAD,MAAAC,cAAApC,SAAA,CAAApH,MAAAqJ,EAAAW,OAAAL,SAAA,SAAA3J,GAAA,OAAAsJ,EAAA,CAAAU,OAAAhK,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAS,CACjFiK,CAAsC,EAChDmB,KAAA,SAAAM,GAAArC,EAAAqC,EAAArC,WACPE,OAA4BQ,MAAAA,cAAAA,MAAAA,SAAAA,KAAQJ,MAAAA,cAAAA,MAAAA,CAAQA,MAAQ,MAAA,EAAAJ,MAAAC,cAAA,KAAA,KAAAD,MAAAC,cAAApC,SAAKkC,QAAc,CAAAtJ,MAAAqJ,EAAAK,MAAA,CAAA,CAAA,EAkG3EH,MAAAC,cAAA,MAAA,CAlG6EO,IAAQ/J,EAAAA,SAAAA,IAAAA,EAAAA,QAAAA,CAAAA,EAAMuJ,MAAAC,cAAA,MAAA,CAAEqB,MAAA,cAAA,EAAAtB,MAAAC,cAAApC,SAAAyC,QAAA,CAAA7J,MAAAqJ,EAAAU,MAAA,CAAA,CACvF,EAAAR,MAAAC,cAAA,KAAA,KAEVyB,MAAAA,cAAAA,YAAepB,QAAC,IAAA,CAChBqB,CAIM,EAiGN3B,MAAAC,cAAA,MAAA,CAhGKqB,MAAM,IAAA,EAAItB,MAAAC,cAAA,OAAA,KAAAD,MAAAC,cAAApC,SACXmC,QAAAC,CAAAA,MAAAH,EAAAW,MAAA,CAAA,CAAA,CAAgBhK,CAA0B2J,CAA2C,CAAU,CAAA,EAE5E7C,kBAAA,sBAAA,CAEV0B,MAAA,SACKG,SAAF0C,eACAhC,WACIE,CACeG,OAAA,CAAA7H,KAAA,SAAAoH,QAAA,WAAA,EAqGvC0C,MArG6C,CAAA9J,KAAA,SACrCoH,QAAAO,UAAA,CAA6BH,EAA0BF,KACvDI,SADuDqC,GACvD,IAAArC,EAAAC,EAAAD,WAAAC,EAAAoC,EAAApC,cAAUH,OAAqCa,MAAAA,cAAAA,MAAAA,SAAAA,KAC/CV,MAAAA,cAAAA,kBAAA,KAAAD,MAAAC,cAAA7B,UAAA,CAAAa,MAAA,sBAAA,EAAAe,MAAAC,cAAA1B,YAAA,CAAA+D,MAAA,MAAA7L,MAAAqJ,EAAAsC,MAAAhC,SAAA,SAAA3J,GAAA,OAAAsJ,EAAA,CAAAqC,MAAA3L,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAAWuJ,MAAAC,cAAA,MAAA,CAAAqB,MAAA,KAAA,EAActB,MAAAC,cAAA,KAAA,KAAAD,MAAAC,cAAApC,SAAA,CAAApH,MACrBqJ,EAAAG,OAACpC,SAASyC,SAAAA,GAAO,OAAAP,EAAA,CAAAI,OAAA1J,CAAA,CAAA,CAAA,CAAA,CAAA,CAAA,EAyGzBuJ,MAAAC,cAAA,IAAA,CAzG0BxJ,KAAOqJ,EAAWU,KAAAA,EAAAA,YAAAA,EAAOR,MAAAC,cAAEhC,YAC3C,CA0GVyD,cAtGW,CAAA,yBAAIC,SAAA,CACalL,CAAAA,wBAAkBgK,IAAgB,CACzD,EAGOT,MAAAC,cAAAhC,YAAA,CACFyD,cAAA,CAAA,yBAEFnE,SAAAA,CACS,CAAE,wBAAY,IACnB6B,CAAAA,CACAwC,CACY,CACQ,EAAUC,KAAS,SAAAU,GAAAzC,EAAAyC,EAAAzC,WAAM,OAC5CE,MAAAC,cAAAD,MAAAE,SAAA,KACGF,MAAAC,cAAA,MAAA,CAAqCqB,MAAA,KAAA,EAAAtB,MAAAC,cAAA,KAAA,KAAhCH,MAAAA,cAAAA,SAAUQ,QAAAyB,CAAAtL,MAAVqJ,EAAUK,MAAA,CAAA,CAAA,EAyG/BH,MAAAC,cAAA,IAAA,CAzGiCF,KAAAA,EAAagC,KAAbhC,EAAAA,YAAa,EAC9BC,MAAAC,cAAAhC,YAAAqC,QACIN,IAAAA,EAyGpBA,MAAAC,cAAChC,YAvG4C6B,QAAWK,IAAAA,CAwGvD,CAxGoFJ,CAAgC,CAAA,CAAA","file":"bundle.js","sourcesContent":["const { registerBlockType } = wp.blocks;\r\nconst { useBlockProps, RichText, MediaUpload, MediaUploadCheck, InspectorControls, InnerBlocks } = wp.blockEditor;\r\nconst { PanelBody, Button, SelectControl, TextControl } = wp.components;\r\nconst { useState, useEffect } = wp.element;\r\nconst apiFetch = wp.apiFetch;\r\n\r\nconst fetchOptions = async () => {\r\n    try {\r\n        const posts = await apiFetch({ path: '/wp/v2/posts?per_page=100' });\r\n        const categories = await apiFetch({ path: '/wp/v2/categories?per_page=100' });\r\n\r\n        const postOptions = posts.map((post) => ({\r\n            label: `Post: ${post.title.rendered}`,\r\n            value: post.link,\r\n        }));\r\n\r\n        const categoryOptions = categories.map((category) => ({\r\n            label: `Category: ${category.name}`,\r\n            value: category.link,\r\n        }));\r\n\r\n        return [...postOptions, ...categoryOptions];\r\n    } catch (error) {\r\n        console.error('Error fetching data:', error);\r\n        return [];\r\n    }\r\n};\r\n            registerBlockType('block-master/test-1-1-0', {\r\n                title: 'Test-1-1-0',\r\n                category: 'block-master',\r\n                parent: ['block-master/test-1-1'],\r\n                attributes: {\r\n                    text_0: { type: 'string', default: '123' }\r\n                },\r\n                edit: ({ attributes, setAttributes }) => {\r\n                    return (\r\n                        <>\r\n                            \r\n                            <li><RichText value={attributes.text_0} onChange={(value) => setAttributes({ text_0: value })} /></li>\r\n                        </>\r\n                    );\r\n                },\r\n                save: ({ attributes }) => {\r\n                    return (\r\n                        <>\r\n                            <li><RichText.Content value={attributes.text_0} /></li>\r\n                        </>\r\n                    );\r\n                }\r\n            });\r\n        \r\n            registerBlockType('block-master/test-1-1', {\r\n                title: 'Test-1-1',\r\n                category: 'block-master',\r\n                parent: ['block-master/test-1'],\r\n                attributes: {\r\n                    text_0: { type: 'string', default: 'yagear' },\ntext_1: { type: 'string', default: 'asdjlkajdlkjslf kfjslkmflskf slfks ekcs' },\ntext_2: { type: 'string', default: 'dlkjslf kfjslkmflskf slfks ekcs' },\nimgSrc_0: { type: 'string', default: '/sdasd/sd/ad/' },\nimgAlt_0: { type: 'string', default: 'rasm-uchun-text' }\r\n                },\r\n                edit: ({ attributes, setAttributes }) => {\r\n                    return (\r\n                        <>\r\n                            <InspectorControls><PanelBody title='Image & URL Settings'><MediaUploadCheck><MediaUpload onSelect={(media) => setAttributes({ imgSrc_0: media.url })} allowedTypes={['image']} render={({ open }) => (<Button onClick={open} isPrimary>Choose Image</Button>)} /></MediaUploadCheck></PanelBody></InspectorControls>\r\n                            <div class=\"card\">\n        <h4><RichText value={attributes.text_0} onChange={(value) => setAttributes({ text_0: value })} /></h4>\n        <img src={attributes.imgSrc_0} alt={attributes.imgAlt_0} />\n        <div class=\"descriptions\">\n            <RichText value={attributes.text_1} onChange={(value) => setAttributes({ text_1: value })} />\n        </div><ul>\n        <InnerBlocks\r\n    allowedBlocks={['block-master/test-1-1-0']}\r\n    template={[\r\n        ['block-master/test-1-1-0', {}],\r\n    ]}/>\n        </ul>\n    </div>\n    <div class=\"ds\">\n        <span><RichText value={attributes.text_2} onChange={(value) => setAttributes({ text_2: value })} /></span>\n    </div>\r\n                        </>\r\n                    );\r\n                },\r\n                save: ({ attributes }) => {\r\n                    return (\r\n                        <>\r\n                            <div class=\"card\">\n        <h4><RichText.Content value={attributes.text_0} /></h4>\n        <img src={attributes.imgSrc_0} alt={attributes.imgAlt_0} />\n        <div class=\"descriptions\">\n            <RichText.Content value={attributes.text_1} />\n        </div><ul>\n        <InnerBlocks.Content />\n        </ul>\n    </div>\n    <div class=\"ds\">\n        <span><RichText.Content value={attributes.text_2} /></span>\n    </div>\r\n                        </>\r\n                    );\r\n                }\r\n            });\r\n        \r\n            registerBlockType('block-master/test-1-0-0', {\r\n                title: 'Test-1-0-0',\r\n                category: 'block-master',\r\n                parent: ['block-master/test-1-0'],\r\n                attributes: {\r\n                    text_0: { type: 'string', default: '123' }\r\n                },\r\n                edit: ({ attributes, setAttributes }) => {\r\n                    return (\r\n                        <>\r\n                            \r\n                            <li><RichText value={attributes.text_0} onChange={(value) => setAttributes({ text_0: value })} /></li>\r\n                        </>\r\n                    );\r\n                },\r\n                save: ({ attributes }) => {\r\n                    return (\r\n                        <>\r\n                            <li><RichText.Content value={attributes.text_0} /></li>\r\n                        </>\r\n                    );\r\n                }\r\n            });\r\n        \r\n            registerBlockType('block-master/test-1-0', {\r\n                title: 'Test-1-0',\r\n                category: 'block-master',\r\n                parent: ['block-master/test-1'],\r\n                attributes: {\r\n                    text_0: { type: 'string', default: 'yagear' },\ntext_1: { type: 'string', default: 'asdjlkajdlkjslf kfjslkmflskf slfks ekcs' },\ntext_2: { type: 'string', default: 'dlkjslf kfjslkmflskf slfks ekcs' },\nimgSrc_0: { type: 'string', default: '/sdasd/sd/ad/' },\nimgAlt_0: { type: 'string', default: 'rasm-uchun-text' }\r\n                },\r\n                edit: ({ attributes, setAttributes }) => {\r\n                    return (\r\n                        <>\r\n                            <InspectorControls><PanelBody title='Image & URL Settings'><MediaUploadCheck><MediaUpload onSelect={(media) => setAttributes({ imgSrc_0: media.url })} allowedTypes={['image']} render={({ open }) => (<Button onClick={open} isPrimary>Choose Image</Button>)} /></MediaUploadCheck></PanelBody></InspectorControls>\r\n                            <div class=\"card\">\n        <h4><RichText value={attributes.text_0} onChange={(value) => setAttributes({ text_0: value })} /></h4>\n        <img src={attributes.imgSrc_0} alt={attributes.imgAlt_0} />\n        <div class=\"descriptions\">\n            <RichText value={attributes.text_1} onChange={(value) => setAttributes({ text_1: value })} />\n        </div><ul>\n        <InnerBlocks\r\n    allowedBlocks={['block-master/test-1-0-0']}\r\n    template={[\r\n        ['block-master/test-1-0-0', {}],\r\n    ]}/>\n        </ul>\n    </div>\n    <div class=\"ds\">\n        <span><RichText value={attributes.text_2} onChange={(value) => setAttributes({ text_2: value })} /></span>\n    </div>\r\n                        </>\r\n                    );\r\n                },\r\n                save: ({ attributes }) => {\r\n                    return (\r\n                        <>\r\n                            <div class=\"card\">\n        <h4><RichText.Content value={attributes.text_0} /></h4>\n        <img src={attributes.imgSrc_0} alt={attributes.imgAlt_0} />\n        <div class=\"descriptions\">\n            <RichText.Content value={attributes.text_1} />\n        </div><ul>\n        <InnerBlocks.Content />\n        </ul>\n    </div>\n    <div class=\"ds\">\n        <span><RichText.Content value={attributes.text_2} /></span>\n    </div>\r\n                        </>\r\n                    );\r\n                }\r\n            });\r\n        \r\n            registerBlockType('block-master/test-1', {\r\n                title: 'Test-1',\r\n                category: 'block-master',\r\n                \r\n                attributes: {\r\n                    text_0: { type: 'string', default: 'hayvonlar' },\nurl_0: { type: 'string', default: 'test.php' }\r\n                },\r\n                edit: ({ attributes, setAttributes }) => {\r\n                    return (\r\n                        <>\r\n                            <InspectorControls><PanelBody title='Image & URL Settings'><TextControl label='URL' value={attributes.url_0} onChange={(value) => setAttributes({ url_0: value })} /></PanelBody></InspectorControls>\r\n                            <div class=\"div\">\n    <h1><RichText value={attributes.text_0} onChange={(value) => setAttributes({ text_0: value })} /></h1>\n    <a href={attributes.url_0} > some tag </a>\n    <InnerBlocks\r\n    allowedBlocks={['block-master/test-1-0']}\r\n    template={[\r\n        ['block-master/test-1-0', {}],\r\n    ]}/>\n    <InnerBlocks\r\n    allowedBlocks={['block-master/test-1-1']}\r\n    template={[\r\n        ['block-master/test-1-1', {}],\r\n    ]}/>\n</div>\r\n                        </>\r\n                    );\r\n                },\r\n                save: ({ attributes }) => {\r\n                    return (\r\n                        <>\r\n                            <div class=\"div\">\n    <h1><RichText.Content value={attributes.text_0} /></h1>\n    <a href={attributes.url_0} > some tag </a>\n    <InnerBlocks.Content />\n    <InnerBlocks.Content />\n</div>\r\n                        </>\r\n                    );\r\n                }\r\n            });\r\n        "]}